<Window
    x:Class="ManipulatorDemo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sdxm="clr-namespace:SharpDX;assembly=SharpDX.Mathematics"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Title="Manipulator Demo (HelixToolkitDX)"
    Width="1200"
    Height="600"
    mc:Ignorable="d">
    <Window.Resources>
        <hx:RenderTechniqueConverter x:Key="RenderTechniqueConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>
        <hx:Viewport3DX
            x:Name="view1"
            Title="{Binding Title}"
            Grid.Row="1"
            Camera="{Binding Camera}"
            CoordinateSystemLabelForeground="White"
            EffectsManager="{Binding EffectsManager}"
            ShowCoordinateSystem="True"
            SubTitle="{Binding SubTitle}"
            TextBrush="Black"
            UseDefaultGestures="False">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Key="B" Command="hx:ViewportCommands.BackView" />
                <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView" />
                <KeyBinding Key="U" Command="hx:ViewportCommands.TopView" />
                <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView" />
                <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView" />
                <KeyBinding Key="R" Command="hx:ViewportCommands.RightView" />
                <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E" />
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="Shift+RightClick" />
            </hx:Viewport3DX.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDown3D">
                    <ie:CallMethodAction MethodName="OnMouseDown3DHandler" TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--<hx:AmbientLight3D Color="{Binding AmbientLightColor}"/>-->

            <hx:DirectionalLight3D Direction="{Binding DirectionalLightDirection}" Color="{Binding DirectionalLightColor}" />

            <hx:MeshGeometryModel3D
                x:Name="model1"
                Geometry="{Binding Model2}"
                Material="{Binding Material1}"
                Transform="{Binding Model1Transform, Mode=TwoWay}" />

            <hx:MeshGeometryModel3D
                x:Name="model2"
                Geometry="{Binding Model}"
                Material="{Binding Material2}"
                Transform="{Binding Model2Transform, Mode=TwoWay}" />

            <hx:DraggableGeometryModel3D
                x:Name="model3"
                Geometry="{Binding Model}"
                Material="{Binding Material3}"
                Transform="{Binding Model3Transform, Mode=TwoWay}" />

            <hx:LineGeometryModel3D
                x:Name="lines"
                Geometry="{Binding Lines}"
                Smoothness="2"
                Thickness="2"
                Transform="{Binding Transform, ElementName=model3}"
                Color="Black" />
            <hx:TransformManipulator3D
                x:Name="manipulator"
                CenterOffset="{Binding CenterOffset}"
                SizeScale="1"
                Target="{Binding Target}" />
            <!--<hx:UITranslateManipulator3D
                x:Name="translateX"
                Direction="1,0,0"
                Material="{x:Static hx:PhongMaterials.Red}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}"
                Offset="1,0,0" />

            <hx:UITranslateManipulator3D
                x:Name="translateY"
                Direction="0,1,0"
                Material="{x:Static hx:PhongMaterials.Green}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}"
                Offset="0,1,0" />

            <hx:UITranslateManipulator3D
                x:Name="translateZ"
                Direction="0,0,1"
                Material="{x:Static hx:PhongMaterials.Blue}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}"
                Offset="0,0,1" />

            <hx:UIRotateManipulator3D
                x:Name="rotateX"
                Axis="1,0,0"
                InnerDiameter="2"
                Material="{x:Static hx:PhongMaterials.Red}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}" />

            <hx:UIRotateManipulator3D
                x:Name="rotateY"
                Axis="0,1,0"
                InnerDiameter="2"
                Material="{x:Static hx:PhongMaterials.Green}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}" />

            <hx:UIRotateManipulator3D
                x:Name="rotateZ"
                Axis="0,0,1"
                InnerDiameter="2"
                Material="{x:Static hx:PhongMaterials.Blue}"
                TargetTransform="{Binding Transform, ElementName=model2}"
                Transform="{Binding Transform, ElementName=model2}" />


            <hx:UICompositeManipulator3D
                x:Name="composit"
                CanRotateX="true"
                CanRotateY="true"
                CanRotateZ="true"
                CanTranslateX="true"
                CanTranslateY="true"
                CanTranslateZ="true"
                Diameter="2"
                TargetTransform="{Binding Transform, ElementName=model1}"
                Transform="{Binding Transform, ElementName=model1}" />-->


            <hx:LineGeometryModel3D
                x:Name="grid"
                Geometry="{Binding Grid}"
                Transform="{Binding GridTransform}"
                Color="{Binding GridColor}" />


        </hx:Viewport3DX>
        <StackPanel
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Vertical">
            <CheckBox IsChecked="{Binding ElementName=manipulator, Path=EnableScaling}">Enable Scaling</CheckBox>
            <CheckBox IsChecked="{Binding ElementName=manipulator, Path=EnableRotation}">Enable Rotation</CheckBox>
            <CheckBox IsChecked="{Binding ElementName=manipulator, Path=EnableTranslation}">Enable Translation</CheckBox>
            <CheckBox IsChecked="{Binding ElementName=manipulator, Path=EnableXRayGrid}">Enable XRayGrid</CheckBox>
            <Button Command="{Binding ResetTransformsCommand}">Reset</Button>
        </StackPanel>
        <StatusBar Grid.Row="1" VerticalAlignment="Bottom">
            <StatusBar.Background>
                <SolidColorBrush Opacity="0.5" Color="WhiteSmoke" />
            </StatusBar.Background>
            <StatusBarItem>
                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Text="{Binding FrameRate, ElementName=view1, StringFormat=D3D11 - \{0:0.00\} FPS}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.Position, StringFormat=Position: \{0:0.0\}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.LookDirection, StringFormat=LookDirection: \{0:0.0\}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Camera.UpDirection, StringFormat=UpDirection: \{0:0.0\}}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Items.Count, ElementName=view1, StringFormat=Children: \{0\}}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
